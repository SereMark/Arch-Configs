vim.g.mapleader=' ' vim.loader.enable() vim.o.winborder='rounded' vim.opt.number,vim.opt.cursorline,vim.opt.signcolumn,vim.opt.undofile,vim.opt.ignorecase,vim.opt.smartcase,vim.opt.termguicolors,vim.opt.scrolloff,vim.opt.sidescrolloff,vim.opt.laststatus,vim.opt.clipboard=true,true,'yes',true,true,true,true,4,4,0,'unnamedplus' vim.iter({'ibhagwan/fzf-lua','folke/tokyonight.nvim','nvim-treesitter/nvim-treesitter'}):each(function(r) local n=r:match('([^/]+)$') local p=vim.fs.joinpath(vim.fn.stdpath('data'),'site','pack','plugins','start',n) if not vim.uv.fs_stat(p)then vim.fn.system({'git','clone','--depth=1','https://github.com/'..r,p})end end) vim.iter({sf='files',sg='live_grep',sb='buffers',sh='help_tags'}):each(function(k,v)vim.keymap.set('n','<leader>'..k,function()require('fzf-lua')[v]()end)end) pcall(vim.cmd.colorscheme,'tokyonight') require('nvim-treesitter.configs').setup({ensure_installed={'python','lua','vim'},highlight={enable=1,additional_vim_regex_highlighting=0},indent={enable=1}}) vim.api.nvim_create_autocmd('VimEnter',{callback=function() local r,py=vim.fs.root(0,{'.git','requirements.txt'})or vim.uv.cwd(),vim.env.VIRTUAL_ENV and vim.fs.joinpath(vim.env.VIRTUAL_ENV,'bin','python')or vim.fn.exepath('python3') vim.api.nvim_create_autocmd('LspAttach',{callback=function(e) local c=vim.lsp.get_client_by_id(e.data.client_id) if c.supports_method('textDocument/completion')then vim.lsp.completion.enable(true,e.data.client_id,e.buf,{autotrigger=true})end if c.supports_method('textDocument/inlayHint')then vim.lsp.inlay_hint.enable(true,{bufnr=e.buf})end vim.iter({K='hover',gd='definition',gr='references',['<leader>ca']='code_action'}):each(function(k,v)vim.keymap.set('n',k,vim.lsp.buf[v],{buffer=e.buf})end)end}) local s={} vim.iter({ruff={cmd={vim.fs.joinpath(vim.env.HOME,'.local','ruff-venv','bin','ruff'),'server'},root_dir=r},basedpyright={cmd={vim.fs.joinpath(vim.env.HOME,'.local','basedpyright-venv','bin','basedpyright-langserver'),'--stdio'},root_dir=r,before_init=function(_,c)c.settings={python={pythonPath=py}}end}}):filter(function(_,x)return vim.fn.executable(x.cmd[1])==1 end):each(function(n,x)vim.lsp.config(n,x)table.insert(s,n)end) vim.lsp.enable(s)end})