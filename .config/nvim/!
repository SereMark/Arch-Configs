#!/usr/bin/env python3
"""Test file for core functionality validation."""

import os
import sys
from typing import Dict, List, Optional


def test_function(param: str, number: int = 42) -> bool:
    """Test function with type hints."""
    variable = "test_string"
    logger = "test_logger"
    parser = "test_parser"

    # Test various Python constructs
    data = {"key": "value", "number": number, "boolean": True}

    items = [1, 2, 3, 4, 5]

    for item in items:
        if item % 2 == 0:
            print(f"Even number: {item}")

    return len(variable) > 0


class TestClass:
    """Test class for syntax highlighting."""

    def __init__(self, name: str):
        self.name = name
        self.value = 100

    def method(self) -> str:
        return f"Name: {self.name}, Value: {self.value}"


if __name__ == "__main__":
    instance = TestClass("test")
    result = test_function("hello", 123)
    print(instance.method())
    print(f"Result: {result}")

