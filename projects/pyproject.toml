[tool.ruff]
# Match nvim ruff configuration for consistent experience
line-length = 88
target-version = "py311"
exclude = [
    "venv",
    ".venv",
    "__pycache__",
    ".git",
    ".ruff_cache",
]

[tool.ruff.lint]
# Enable comprehensive rule set matching development needs
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # pyflakes
    "I",    # isort (import sorting)
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "PIE",  # flake8-pie
    "PL",   # pylint
    "RUF",  # ruff-specific rules
]

# Ignore rules that are too noisy for AI development
ignore = [
    "E501",   # line too long (handled by formatter)
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison
    "PLC0414", # useless import alias
    "SIM108",  # use ternary operator (sometimes less readable)
    "B008",    # do not perform function calls in argument defaults
    "N806",    # variable name should be lowercase (AI naming conventions)
    "UP007",   # use X | Y for type annotations (compatibility)
]

[tool.ruff.lint.isort]
# Import organization matching nvim organizeImports=true
combine-as-imports = true
force-wrap-aliases = true
known-first-party = []
split-on-trailing-comma = true

[tool.ruff.lint.pyupgrade]
# Keep union style consistent with codebase
keep-runtime-typing = true

[tool.ruff.format]
# Consistent formatting
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# Match nvim "fixAll" behavior - auto-fix everything possible
docstring-code-format = true
docstring-code-line-length = 80